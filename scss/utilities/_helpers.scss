//
// Helper classes and placeholders
// --------------------------------------------------

// Placeholders
// -----------------
@mixin pull-left {
  float: left;
}

@mixin pull-right {
  float: right;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin center-align {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin appearance {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

@mixin inherit-color {
  color: inherit;
}

// Helper Classes
// -----------------
.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.img-left {
  float: left;
}

.img-right {
  float: right;
}

.img-center {
  width: auto;
  display: block;
  margin: 0 auto;
}

.img-full {
  width: 100%;
  max-width: 100%;
}

/* Hide only visually, but have it available for screenreaders: h5bp.com/v */
.visually-hidden {
  border: 0; 
  clip: rect(0 0 0 0); 
  height: 1px; 
  margin: -1px; 
  overflow: hidden; 
  padding: 0; 
  position: absolute; 
  width: 1px; 
}

/* Extends the .visually-hidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto; 
  height: auto; 
  margin: 0; 
  overflow: visible; 
  position: static; 
  width: auto;
}

// no-wrap class used in text component to keep special text from breaking
.no-wrap {
  display: inline-block;
  word-wrap: nowrap;
}

.disable-content { 
  display: block;
  width: 100vw;
  height: 100vh;
  background-color: rgba(255,255,255,0.7);
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
}

#overlay {
    width: 100%;
    height: 100vh;
    min-height: 100%;
    background-color: rgba(0,0,0,1);
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
    display: block;
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}

body {
  &.no-scroll { overflow: hidden; }
  &.overlay-visible {
    #overlay {
      // Overlay entire page
      opacity: 0.6; 
      visibility: visible;
      z-index: 10;
    }
    // Override z-index with additional class so mega-menu overlay will 
    // be on top of content but behind the mega-menu and the header
    &.mega-menu-visible #overlay {
      z-index: 200;
    }
  }
 

}

@function opposite($position) {
  @if $position == left {
    @return right;
  }
  @if $position == right {
    @return left;
  }
  @if $position == top {
    @return bottom;
  }
  @if $position == bottom {
    @return top;
  }
}








